/**
 * @description: takes a string of braces, and determines if the order of the braces is valid. Braces are (){}[]
 *  validBraces( "(){}[]" ) => returns true
 * validBraces( "(}" ) => returns false
 * validBraces( "[(])" ) => returns false
 * validBraces( "([{}])" ) => returns true 
 * @param {string} braces - a string of braces to validate
 * @return {boolean} - returns true if valid; false if invalid
 */
function validBraces(braces) {
    var validBraces = true;
    /**Look for any (), {}, or [], remove them, then repeat**/
    while(braces.match(/\[\]|\(\)|\{\}/)){
        braces = braces.replace(/\[\]|\(\)|\{\}/, "");
    }
    /**If after removing all [], (), {} there are still chars left its a bad string**/
    if(braces.length>0){
        validBraces = false;
    }
    return validBraces;
}
